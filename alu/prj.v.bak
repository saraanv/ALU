module prj(input [7:0] a,input [7:0] b,input [1:0] op, output reg [15:0] result , output reg error);
reg[15:0] product;
reg[15:0] quotient;
reg[15:0] remainder;
integer i;

always @(*) begin
error = 0 ;
2'b00 : begin 
result = a+b ;
end 
2'b01 : begin 
product = 16'b0;
for(i=0 ; i<8 ; i = i+1 ) begin
if (b[i])
product = product +(a<<1);
end
result = product;
end
2'b10:begin
if(b==0)begin 
result = 16'b0;
error=1;
end else begin 
quotient = 0 ;
remainder = 0 ;
for (i=7 ; i>=0 ; i = i-1)begin
remainder = (remainder <<1) | (a[i]?1:0);
if (reminder >= b) begin
remainder = remainder - b;
quotient = quotient | (1<<i);
end
end
result = {quotient, remainder[7:0]};
end
end
default : begin
result = 16'b0;
end
endcase
end
endmodule